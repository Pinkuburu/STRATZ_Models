// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class PlayerCoachingLeaderboardResponseTypeQueryBuilder : GraphQlQueryBuilder<PlayerCoachingLeaderboardResponseTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "players", IsComplex = true, QueryBuilderType = typeof(PlayerCoachingLeaderboardTypeQueryBuilder) },
                new FieldMetadata { Name = "accounts" },
                new FieldMetadata { Name = "accountsAbove500" },
                new FieldMetadata { Name = "accountsAbove2500" }
            };

        protected override string TypeName { get { return "PlayerCoachingLeaderboardResponseType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PlayerCoachingLeaderboardResponseTypeQueryBuilder WithPlayers(PlayerCoachingLeaderboardTypeQueryBuilder playerCoachingLeaderboardTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("players", alias, playerCoachingLeaderboardTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public PlayerCoachingLeaderboardResponseTypeQueryBuilder ExceptPlayers()
        {
            return ExceptField("players");
        }

        public PlayerCoachingLeaderboardResponseTypeQueryBuilder WithAccounts(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("accounts", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerCoachingLeaderboardResponseTypeQueryBuilder ExceptAccounts()
        {
            return ExceptField("accounts");
        }

        public PlayerCoachingLeaderboardResponseTypeQueryBuilder WithAccountsAbove500(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("accountsAbove500", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerCoachingLeaderboardResponseTypeQueryBuilder ExceptAccountsAbove500()
        {
            return ExceptField("accountsAbove500");
        }

        public PlayerCoachingLeaderboardResponseTypeQueryBuilder WithAccountsAbove2500(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("accountsAbove2500", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerCoachingLeaderboardResponseTypeQueryBuilder ExceptAccountsAbove2500()
        {
            return ExceptField("accountsAbove2500");
        }
    }
}
