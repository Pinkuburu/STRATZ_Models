// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
#if!GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
#endif

namespace STRATZ
{
    public partial class PlayerActivitySummaryTypeQueryBuilder : GraphQlQueryBuilder<PlayerActivitySummaryTypeQueryBuilder>
    {
        private static readonly FieldMetadata[] AllFieldMetadata =
            new []
            {
                new FieldMetadata { Name = "activity" },
                new FieldMetadata { Name = "matchCount" },
                new FieldMetadata { Name = "coreCount" },
                new FieldMetadata { Name = "supportCount" },
                new FieldMetadata { Name = "imp" },
                new FieldMetadata { Name = "heroes", IsComplex = true, QueryBuilderType = typeof(PlayerActivitySummaryHeroTypeQueryBuilder) }
            };

        protected override string TypeName { get { return "PlayerActivitySummaryType"; } } 

        public override IReadOnlyList<FieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PlayerActivitySummaryTypeQueryBuilder WithActivity(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("activity", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerActivitySummaryTypeQueryBuilder ExceptActivity()
        {
            return ExceptField("activity");
        }

        public PlayerActivitySummaryTypeQueryBuilder WithMatchCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("matchCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerActivitySummaryTypeQueryBuilder ExceptMatchCount()
        {
            return ExceptField("matchCount");
        }

        public PlayerActivitySummaryTypeQueryBuilder WithCoreCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("coreCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerActivitySummaryTypeQueryBuilder ExceptCoreCount()
        {
            return ExceptField("coreCount");
        }

        public PlayerActivitySummaryTypeQueryBuilder WithSupportCount(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("supportCount", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerActivitySummaryTypeQueryBuilder ExceptSupportCount()
        {
            return ExceptField("supportCount");
        }

        public PlayerActivitySummaryTypeQueryBuilder WithImp(string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithScalarField("imp", alias, new GraphQlDirective[] { include, skip });
        }

        public PlayerActivitySummaryTypeQueryBuilder ExceptImp()
        {
            return ExceptField("imp");
        }

        public PlayerActivitySummaryTypeQueryBuilder WithHeroes(PlayerActivitySummaryHeroTypeQueryBuilder playerActivitySummaryHeroTypeQueryBuilder, string alias = null, IncludeDirective include = null, SkipDirective skip = null)
        {
            return WithObjectField("heroes", alias, playerActivitySummaryHeroTypeQueryBuilder, new GraphQlDirective[] { include, skip });
        }

        public PlayerActivitySummaryTypeQueryBuilder ExceptHeroes()
        {
            return ExceptField("heroes");
        }
    }
}
